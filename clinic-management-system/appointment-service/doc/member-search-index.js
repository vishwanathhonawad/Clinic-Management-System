memberSearchIndex = [{"p":"com.demo.spring.controller","c":"AppointmentController","l":"addAppointment(AppointmentDTO)","url":"addAppointment(com.demo.spring.dto.AppointmentDTO)"},{"p":"com.demo.spring.service","c":"AppointmentService","l":"addAppointment(AppointmentDTO)","url":"addAppointment(com.demo.spring.dto.AppointmentDTO)"},{"p":"com.demo.spring","c":"AppointmentApplication","l":"AppointmentApplication()","url":"%3Cinit%3E()"},{"p":"com.demo.spring.controller","c":"AppointmentController","l":"AppointmentController()","url":"%3Cinit%3E()"},{"p":"com.demo.spring.service","c":"AppointmentService","l":"appointmentOfDoctorOnDate(Integer, String)","url":"appointmentOfDoctorOnDate(java.lang.Integer,java.lang.String)"},{"p":"com.demo.spring.service","c":"AppointmentService","l":"AppointmentService()","url":"%3Cinit%3E()"},{"p":"com.demo.spring.exception","c":"DoctorAppointmentNotFound","l":"DoctorAppointmentNotFound()","url":"%3Cinit%3E()"},{"p":"com.demo.spring.exception","c":"DoctorNotFoundException","l":"DoctorNotFoundException()","url":"%3Cinit%3E()"},{"p":"com.demo.spring.repository","c":"AppointmentRepository","l":"findAllByDoctorIdAndDate(Integer, String)","url":"findAllByDoctorIdAndDate(java.lang.Integer,java.lang.String)"},{"p":"com.demo.spring.repository","c":"AppointmentRepository","l":"findAllByPatientId(Integer)","url":"findAllByPatientId(java.lang.Integer)"},{"p":"com.demo.spring.repository","c":"AppointmentRepository","l":"findExistsAppointment(Integer, Integer, String)","url":"findExistsAppointment(java.lang.Integer,java.lang.Integer,java.lang.String)"},{"p":"com.demo.spring","c":"AppointmentApplication","l":"getTemplate()"},{"p":"com.demo.spring.exception","c":"DoctorAppointmentNotFound","l":"handleDoctorAppointmentNotFound(DoctorAppointmentNotFound)","url":"handleDoctorAppointmentNotFound(com.demo.spring.exception.DoctorAppointmentNotFound)"},{"p":"com.demo.spring.exception","c":"DoctorNotFoundException","l":"handleDoctorNotFoundException(DoctorNotFoundException)","url":"handleDoctorNotFoundException(com.demo.spring.exception.DoctorNotFoundException)"},{"p":"com.demo.spring.exception","c":"PatientAppointmentNotFound","l":"handlePatientAppointmentNotFound(PatientAppointmentNotFound)","url":"handlePatientAppointmentNotFound(com.demo.spring.exception.PatientAppointmentNotFound)"},{"p":"com.demo.spring.exception","c":"PatientNotExistsException","l":"handlePatientNotExistsException(PatientNotExistsException)","url":"handlePatientNotExistsException(com.demo.spring.exception.PatientNotExistsException)"},{"p":"com.demo.spring.controller","c":"AppointmentController","l":"listAllAppointmentOfDoctor(Integer, String)","url":"listAllAppointmentOfDoctor(java.lang.Integer,java.lang.String)"},{"p":"com.demo.spring.controller","c":"AppointmentController","l":"listAllAppointmentOfPatient(Integer)","url":"listAllAppointmentOfPatient(java.lang.Integer)"},{"p":"com.demo.spring.service","c":"AppointmentService","l":"listAllAppointmentOfPatient(Integer)","url":"listAllAppointmentOfPatient(java.lang.Integer)"},{"p":"com.demo.spring","c":"AppointmentApplication","l":"main(String[])","url":"main(java.lang.String[])"},{"p":"com.demo.spring","c":"AppointmentApplication","l":"openApiDoc()"},{"p":"com.demo.spring.exception","c":"PatientAppointmentNotFound","l":"PatientAppointmentNotFound()","url":"%3Cinit%3E()"},{"p":"com.demo.spring.exception","c":"PatientNotExistsException","l":"PatientNotExistsException()","url":"%3Cinit%3E()"}]